generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  email         String          @unique
  name          String?
  phone         String?
  role          Role            @default(USER)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  clerkUserId   String          @unique
  designs       Design[]
  DesignComment DesignComment[]
  orders        Order[]
}

model Design {
  id           String            @id @default(cuid())
  userId       String
  productId    String
  color        String?
  status       DesignStatus      @default(draft)
  pricingBase  Int
  pricingFees  Int
  pricingTotal Int
  createdAt    DateTime          @default(now())
  updatedAt    DateTime          @updatedAt
  user         User              @relation(fields: [userId], references: [id])
  comments     DesignComment[]
  lineItems    DesignLineItem[]
  placements   DesignPlacement[]
  order        Order?
}

model DesignPlacement {
  id        String   @id @default(cuid())
  designId  String
  side      String
  areaId    String
  assetId   String
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  design    Design   @relation(fields: [designId], references: [id], onDelete: Cascade)

  @@unique([designId, side], name: "designId_side")
}

model DesignComment {
  id        String   @id @default(cuid())
  designId  String
  body      String
  createdAt DateTime @default(now())
  authorId  String?
  author    User?    @relation(fields: [authorId], references: [id])
  design    Design   @relation(fields: [designId], references: [id], onDelete: Cascade)
}

model DesignLineItem {
  id        String   @id @default(cuid())
  designId  String
  size      String
  qty       Int      @default(0)
  unitPrice Int
  surcharge Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  design    Design   @relation(fields: [designId], references: [id], onDelete: Cascade)
}

model Order {
  id        String   @id @default(cuid())
  userId    String
  designId  String   @unique
  total     Int
  currency  String   @default("usd")
  status    String   @default("paid")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  design    Design   @relation(fields: [designId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

enum Role {
  USER
  ADMIN
}

enum DesignStatus {
  draft
  submitted
  approved
  rejected
}
